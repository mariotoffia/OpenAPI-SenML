openapi: 3.0.1
info:
  title: Example 01 for SenML Open API 3.x Specification
  description: |
    This sample demonstrates how to use the SenML as simple rest API to get sensor data and actuate.
    Please consult the [RFC 8428](https://tools.ietf.org/html/rfc8428) for SenML detail.

  termsOfService: https://github.com/mariotoffia/OpenAPI-SenML/blob/master/LICENSE
  contact:
    email: nomail@hobbe.net
  license:
    name: Apache 2.0
    url: https://github.com/mariotoffia/OpenAPI-SenML/blob/master/LICENSE
  version: 2.0.0
externalDocs:
  description: Find out more about SenML [RFC 8428](https://tools.ietf.org/html/rfc8428)
  url: https://tools.ietf.org/html/rfc8428
tags:
- name: operational
  description: SenML operational data
  externalDocs:
    description: RFC 8428
    url: https://tools.ietf.org/html/rfc8428
paths:
  /d/{uuid}/operational:
      get:
        tags:
          - operational
        summary: Gets SenML formatted data
        description: Gets a set of sensor data
        operationId: getOperationalData
        requestBody:
          description: 'The sensors to get the data from e.g.
              <ul>
                <li>[{"bn": "urn:dev:ow:10e2073a010800"t":", "n": "voltage"},</li>
                <li>{"n":"fanspeed"}, {"n": "power"}]</li>
              </ul>'
          content:
            application/senml+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SenMLRequestEntry'
          required: true
        responses:
          200:
            description: 'One or more SenML entries e.g.
              <ul>
                <li>[{"bn": "urn:dev:ow:10e2073a010800"t":","bt": 1276020076.001, "bu": "A", "bver": 5, "n": "voltage", "u" "V", "v": 120.1},</li>
                <li>{"n": "current", "t": -5, "v": 1.2}, {"n": "current", "t": -4, "v": 1.3},</li>
                <li>{"n": "current", "t": -3, "v": 1.4}, {"n": "current", "t": -2, "v": 1.5},</li>
                <li>{"n": "current", "t": -1, "v": 1.6}, {"n": "current", "t": 0, "v": 1.7}]</li>
              </ul>'
            content:
              application/senml+json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SenMLEntry'
          401:
            description: Missing  authorization token
            content: {}
          403:
            description: Not allowed to perform this oeration
            content: {}
          404:
            description: All sensors where not found.
            content: {}
      post:
        tags:
          - operational
        summary: Set actuation data.
        description: The operation puts data to actuators.
        operationId: postOperationalData
        requestBody:
          description: 'The actuators and data to set. For power on a device for 60 seconds
            can look like this:
            <ul>
              <li>[{"bn": "urn:dev:ow:10e2073a010800"t":",  "n": "power", "v": true}, </li>
              <li>{ "n": "ttl", "v": 60 }]</li>
            </ul>'
          content:
            application/senml+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SenMLEntry'
          required: true
        responses:
          200:
            description: A set of response codes, it is neccesary to go through each entry
              to get the result of the operation. Each indiviudal one may have failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SenMLActuationResponse'
          401:
            description: Missing device authorization token
            content: {}
          403:
            description: Not allowed to perform this oeration
            content: {}
          404:
            description: Device with UUID not found
            content: {}
components:
  parameters:
    cc:
      in: header
      name: cc
      example: "23893289shdjdshjk"
      description: A client cookie if asynchronous result.
      schema:
        type: string
  schemas:    
    SenMLRequestEntry:
      $ref: '../spec/protocol/senml/request-entry.yaml'
    SenMLActuationResponse:
      $ref: '../spec/protocol/senml/senml-actuation-response.yaml'
    SenMLEntry:
      $ref: '../spec/protocol/senml/senml-entry.yaml'